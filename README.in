=====================
django-compat-patcher
=====================

A "magic" package which adds retro/forward compatibility patches to Django, so that your app ecosystem doesn't get broken by trivial changes in the core of the framework.

Add :code:`django-compat-patcher` to your pip requirements, install it, and then activate it with::
    
    import django_compat_patcher
    django_compat_patcher.patch()
    
This code must be placed BEFORE any use of django (eg. in your :code:`manage.py` or your :code:`wsgi.py` script).

However, the :code:`DJANGO_SETTINGS_MODULE` environment variable must already be set.

Settings
========

Settings to put in your project's :code:`settings.py`. The value in these settings are the default values.

DCP_INCLUDE_FIXER_IDS
*********************
List of fixer names to include. If :code:`"*"` is used, then all fixers are included.

| **Default:** :code:`"*"`
| **Type:** List of strings, or :code:`"*"`
| **Example:** :code:`DCP_INCLUDE_FIXER_IDS = ['fix_deletion_templatetags_future_url']`

DCP_INCLUDE_FIXER_FAMILIES
**************************
List of fixer families to include.

Note: If you want to include a specific category, remember to remove the :code:`"*"` from :code:`DCP_INCLUDE_FIXER_IDS`.

| **Default:** :code:`[]`
| **Type:** List of strings
| **Choices:** :code:`("djangoX.Y")` where :code:`X` and :code:`Y` are respectively the major and minor versions
| **Example:** :code:`DCP_INCLUDE_FIXER_FAMILIES = ["django1.9"]`

DCP_EXCLUDE_FIXER_IDS
*********************
List of fixer names to exclude.

Note: The "INCLUDE" filters are applied before the "EXCLUDE" ones.

| **Default:** :code:`[]`
| **Type:** List of strings
| **Example:** :code:`DCP_EXCLUDE_FIXER_IDS = ['fix_deletion_templatetags_future_url']`

DCP_EXCLUDE_FIXER_FAMILIES
**************************
List of fixer families to exclude.

Note: The "INCLUDE" filters are applied before the "EXCLUDE" ones.

| **Default:** :code:`[]`
| **Type:** List of strings
| **Choices:** :code:`("djangoX.Y")` where :code:`X` and :code:`Y` are respectively the major and minor versions
| **Example:** :code:`DCP_EXCLUDE_FIXER_FAMILIES = ["django1.6", "django1.9"]`

DCP_PATCH_INJECTED_OBJECTS
***************************

The patcher adds a :code:`__dcp_injected__ = True` attribute to the injected objects (callables, classes, modules, attributes...), when possible, to differentiate them from original ones.

| **Default:** :code:`True`
| **Type:** Boolean
| **Example:** :code:`DCP_PATCH_INJECTED_OBJECTS = False`
